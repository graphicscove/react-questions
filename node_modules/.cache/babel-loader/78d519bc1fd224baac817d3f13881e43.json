{"ast":null,"code":"import _toConsumableArray from \"/Users/Rawnet/Downloads/react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/Rawnet/Downloads/react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Rawnet/Downloads/react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Rawnet/Downloads/react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Rawnet/Downloads/react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Rawnet/Downloads/react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Rawnet/Downloads/react-app/src/Questionnaire.js\";\nimport React from 'react';\nimport Questions1 from './Questions1';\nimport Questions2 from './Questions2';\nimport Questions3 from './Questions3';\n\nvar Questionnaire =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Questionnaire, _React$Component);\n\n  function Questionnaire() {\n    var _this;\n\n    _classCallCheck(this, Questionnaire);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Questionnaire).call(this));\n\n    _this.updateSelected = function (e) {\n      if (!_toConsumableArray(_this.state.selected).includes(e.target.id)) {\n        _this.setState({\n          selected: [].concat(_toConsumableArray(_this.state.selected), [e.target.id])\n        });\n      } else {\n        var index = _toConsumableArray(_this.state.selected).indexOf(e.target.id);\n\n        _this.setState({\n          selected: _toConsumableArray(_this.state.selected.slice(index))\n        });\n      }\n    };\n\n    _this.addName = function (name) {\n      _this.setState({\n        name: name\n      });\n    };\n\n    _this.onSendData = function () {\n      var data = [_this.state.name, JSON.stringify(_this.state.selected)];\n      console.log(typeof data);\n      fetch('/api', {\n        method: 'POST',\n        body: data,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        return console.log(response);\n      });\n    };\n\n    _this.next = function () {\n      var currentStep = _this.state.currentStep + 1;\n\n      _this.setState({\n        currentStep: currentStep\n      });\n    };\n\n    _this.prev = function () {\n      var currentStep = _this.state.currentStep - 1;\n\n      _this.setState({\n        currentStep: currentStep\n      });\n    };\n\n    _this.updateComponent = function () {\n      _this.forceUpdate();\n    };\n\n    _this.state = {\n      currentStep: 1,\n      selected: [],\n      name: ''\n    };\n    return _this;\n  }\n\n  _createClass(Questionnaire, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Questions1, {\n        onUpdateSelected: this.updateSelected,\n        currentStep: this.state.currentStep,\n        selected: this.state.selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(Questions2, {\n        onUpdateSelected: this.updateSelected,\n        currentStep: this.state.currentStep,\n        selected: this.state.selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(Questions3, {\n        onUpdateSelected: this.updateSelected,\n        onDataSend: this.onSendData,\n        onNameChange: this.addName,\n        currentStep: this.state.currentStep,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), this.state.currentStep !== 1 && React.createElement(\"button\", {\n        onClick: this.prev,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Prev\"), this.state.currentStep !== 3 && React.createElement(\"button\", {\n        onClick: this.next,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Next\"));\n    }\n  }]);\n\n  return Questionnaire;\n}(React.Component);\n\nexport { Questionnaire as default };","map":{"version":3,"sources":["/Users/Rawnet/Downloads/react-app/src/Questionnaire.js"],"names":["React","Questions1","Questions2","Questions3","Questionnaire","updateSelected","e","state","selected","includes","target","id","setState","index","indexOf","slice","addName","name","onSendData","data","JSON","stringify","console","log","fetch","method","body","headers","then","response","next","currentStep","prev","updateComponent","forceUpdate","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Questions1 from './Questions1'\nimport Questions2 from './Questions2'\nimport Questions3 from './Questions3'\n\nexport default class Questionnaire extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            currentStep: 1,\n            selected: [],\n            name: ''\n        }\n    }\n\n    updateSelected = (e) => {\n        if (![...this.state.selected].includes(e.target.id)) {\n            this.setState({\n                selected: [...this.state.selected, e.target.id]\n            })\n        } else {\n            const index = [...this.state.selected].indexOf(e.target.id)\n            this.setState({\n                selected: [...this.state.selected.slice(index)]\n            })\n        }\n    }\n\n    addName = (name) => {\n        this.setState({\n            name: name\n        })\n    }\n\n    onSendData = () => {\n        const data = [\n            this.state.name,\n            JSON.stringify(this.state.selected)\n        ]\n        console.log(typeof data);\n        fetch('/api', {\n            method: 'POST',\n            body:  data,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(response => console.log(response))\n    }\n\n    next = () => {\n        let currentStep = this.state.currentStep + 1;\n\n        this.setState({\n            currentStep: currentStep\n        });\n    }\n\n    prev = () => {\n        let currentStep = this.state.currentStep - 1;\n\n        this.setState({\n            currentStep: currentStep\n        });\n    }\n\n    updateComponent = () => {\n        this.forceUpdate()\n    }\n\n    render() {\n        return (\n            <div>\n                <Questions1 onUpdateSelected={ this.updateSelected } currentStep={this.state.currentStep} selected={this.state.selected} />\n                <Questions2 onUpdateSelected={ this.updateSelected } currentStep={this.state.currentStep} selected={this.state.selected} />\n                <Questions3 onUpdateSelected={ this.updateSelected } onDataSend={ this.onSendData } onNameChange={ this.addName} currentStep={this.state.currentStep} />\n                {this.state.currentStep !== 1 &&\n                    <button onClick={this.prev}>Prev</button>\n                }\n                {this.state.currentStep !== 3 &&\n                    <button onClick={this.next}>Next</button>\n                }\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}